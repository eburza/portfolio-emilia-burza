/* FONTS */
@mixin font {
    color: #000;
    font-family: Inter, sans-serif;
    font-style: normal;
    margin: 0;
}

@mixin text-navigation {
    line-height: 1.6rem;
    font-size: 1.25rem;
    font-weight: 400;

    @include respond-to(tablet) {
        line-height: calc-responsive-size(1.6rem, map-get($scale-factors, tablet));
        font-size: calc-responsive-size(1.25rem, map-get($scale-factors, tablet));
    }

    @include respond-to(mobile) {
        line-height: calc-responsive-size(1.6rem, map-get($scale-factors, mobile));
        font-size: calc-responsive-size(1.25rem, map-get($scale-factors, mobile));
    }
}

@mixin heading-xl {
    font-size: 4rem;
    font-weight: 600;
    line-height: 4.75rem;

    @include respond-to(large) {
        font-size: calc-responsive-size(4rem, map-get($scale-factors, large));
        line-height: calc-responsive-size(4.75rem, map-get($scale-factors, large));
    }

    @include respond-to(desktop) {
        font-size: calc-responsive-size(4rem, map-get($scale-factors, desktop));
        line-height: calc-responsive-size(4.75rem, map-get($scale-factors, desktop));
    }

    @include respond-to(tablet) {
        font-size: calc-responsive-size(4rem, map-get($scale-factors, tablet));
        line-height: calc-responsive-size(4.5rem, map-get($scale-factors, tablet));
    }

    @include respond-to(mobile) {
        font-size: calc-responsive-size(4rem, map-get($scale-factors, mobile));
        line-height: calc-responsive-size(4.5rem, map-get($scale-factors, mobile));
    }
}

@mixin heading-l {
    font-size: 3.75rem;
    font-weight: 600;
    line-height: 4rem;

    @include respond-to(large) {
        font-size: calc-responsive-size(3.75rem, map-get($scale-factors, large));
        line-height: calc-responsive-size(4rem, map-get($scale-factors, large));
    }

    @include respond-to(desktop) {
        font-size: calc-responsive-size(3.75rem, map-get($scale-factors, desktop));
        line-height: calc-responsive-size(4rem, map-get($scale-factors, desktop));
    }

    @include respond-to(tablet) {
        font-size: calc-responsive-size(3.75rem, map-get($scale-factors, tablet));
        line-height: calc-responsive-size(4rem, map-get($scale-factors, tablet));
    }

    @include respond-to(mobile) {
        font-size: calc-responsive-size(3.75rem, map-get($scale-factors, mobile));
        line-height: calc-responsive-size(4rem, map-get($scale-factors, mobile));
    }
}

@mixin heading-m {
    font-size: 3rem;
    font-weight: 600;
    line-height: 3.5rem;

    @include respond-to(large) {
        font-size: calc-responsive-size(3rem, map-get($scale-factors, large));
        line-height: calc-responsive-size(3.5rem, map-get($scale-factors, large));
    }

    @include respond-to(desktop) {
        font-size: calc-responsive-size(3rem, map-get($scale-factors, desktop));
        line-height: calc-responsive-size(3.5rem, map-get($scale-factors, desktop));
    }

    @include respond-to(tablet) {
        font-size: calc-responsive-size(3rem, map-get($scale-factors, tablet));
        line-height: calc-responsive-size(3.5rem, map-get($scale-factors, tablet));
    }

    @include respond-to(mobile) {
        font-size: calc-responsive-size(3rem, map-get($scale-factors, mobile));
        line-height: calc-responsive-size(3.5rem, map-get($scale-factors, mobile));
    }
}

@mixin heading-s {
    font-size: 1.75rem;
    font-weight: 600;
    line-height: 2.5rem;

    @include respond-to(large) {
        font-size: calc-responsive-size(1.75rem, map-get($scale-factors, large));
        line-height: calc-responsive-size(2.5rem, map-get($scale-factors, large));
    }

    @include respond-to(desktop) {
        font-size: calc-responsive-size(1.75rem, map-get($scale-factors, desktop));
        line-height: calc-responsive-size(2.5rem, map-get($scale-factors, desktop));
    }

    @include respond-to(tablet) {
        font-size: calc-responsive-size(1.75rem, map-get($scale-factors, tablet));
        line-height: calc-responsive-size(2.5rem, map-get($scale-factors, tablet));
    }

    @include respond-to(mobile) {
        font-size: calc-responsive-size(1.75rem, map-get($scale-factors, mobile));
        line-height: calc-responsive-size(2rem, map-get($scale-factors, mobile));
    }
}

@mixin text-paragraph {
    color: #444;
    font-size: 1.75rem;
    font-weight: 400;

    @include respond-to(large) {
        font-size: calc-responsive-size(1.75rem, map-get($scale-factors, large));
    }

    @include respond-to(desktop) {
        font-size: calc-responsive-size(1.75rem, map-get($scale-factors, desktop));
    }

    @include respond-to(tablet) {
        font-size: calc-responsive-size(1.75rem, map-get($scale-factors, tablet));
    }

    @include respond-to(mobile) {
        font-size: calc-responsive-size(1.75rem, map-get($scale-factors, mobile));
    }
}

@mixin text-paragraph-s {
    color: #444;
    font-size: 1.25rem;
    font-weight: 400;

    @include respond-to(large) {
        font-size: calc-responsive-size(1.25rem, map-get($scale-factors, large));
    }

    @include respond-to(desktop) {
        font-size: calc-responsive-size(1.25rem, map-get($scale-factors, desktop));
    }

    @include respond-to(tablet) {
        font-size: calc-responsive-size(1.25rem, map-get($scale-factors, tablet));
    }

    @include respond-to(mobile) {
        font-size: calc-responsive-size(1.25rem, map-get($scale-factors, mobile));
    }
}

@mixin text-skills {
    color: #444;
    text-align: center;
    font-size: 1.25rem;
    font-weight: 400;
    line-height: 1.936rem;

    @include respond-to(large) {
        font-size: calc-responsive-size(1.25rem, map-get($scale-factors, large));
        line-height: calc-responsive-size(1.936rem, map-get($scale-factors, large));
    }

    @include respond-to(desktop) {
        font-size: calc-responsive-size(1.25rem, map-get($scale-factors, desktop));
        line-height: calc-responsive-size(1.936rem, map-get($scale-factors, desktop));
    }

    @include respond-to(tablet) {
        font-size: calc-responsive-size(1.25rem, map-get($scale-factors, tablet));
        line-height: calc-responsive-size(1.936rem, map-get($scale-factors, tablet));
    }

    @include respond-to(mobile) {
        font-size: calc-responsive-size(1.25rem, map-get($scale-factors, mobile));
        line-height: calc-responsive-size(1.936rem, map-get($scale-factors, mobile));
    }
}

/* BUTTONS ARROW */

@mixin project-preview-button-img {
    width: 3rem;
    
    @include respond-to(large) {
        width: calc-responsive-size(3rem, map-get($scale-factors, large));
    }
    
    @include respond-to(desktop) {
        width: calc-responsive-size(3rem, map-get($scale-factors, desktop));
    }
    
    @include respond-to(tablet) {
        width: calc-responsive-size(3rem, map-get($scale-factors, tablet));
    }
    
    @include respond-to(mobile) {
        width: calc-responsive-size(3rem, map-get($scale-factors, mobile));
    }
}

@mixin project-list-button-img {
    width: 34em;
    transition: all 0.3s ease;
    
    @include respond-to(large) {
        width: calc-responsive-size(4rem, map-get($scale-factors, large));
    }
    
    @include respond-to(desktop) {
        width: calc-responsive-size(4rem, map-get($scale-factors, desktop));
    }
    
    @include respond-to(tablet) {
        width: calc-responsive-size(4rem, map-get($scale-factors, tablet));
    }
    
    @include respond-to(mobile) {
        width: calc-responsive-size(4rem, map-get($scale-factors, mobile));
    }
}

/* IMAGES */
@mixin project-preview-tag-img {
    height: 2rem;
    
    @include respond-to(large) {
        height: calc-responsive-size(2rem, map-get($scale-factors, large));
    }
    
    @include respond-to(desktop) {
        height: calc-responsive-size(2rem, map-get($scale-factors, desktop));
    }
    
    @include respond-to(tablet) {
        height: calc-responsive-size(2rem, map-get($scale-factors, tablet));
    }
    
    @include respond-to(mobile) {
        height: calc-responsive-size(2rem, map-get($scale-factors, mobile));
    }
}

@mixin social-img {
    height: 2.25rem;
    
    @include respond-to(large) {
        height: calc-responsive-size(2.25rem, map-get($scale-factors, large));
    }
    
    @include respond-to(desktop) {
        height: calc-responsive-size(2.25rem, map-get($scale-factors, desktop));
    }
    
    @include respond-to(tablet) {
        height: calc-responsive-size(2.25rem, map-get($scale-factors, tablet));
    }
    
    @include respond-to(mobile) {
        height: calc-responsive-size(2.25rem, map-get($scale-factors, mobile));
    }
}

@mixin footer-heart-img {
    height: 1.75rem;
    
    @include respond-to(large) {
        height: calc-responsive-size(1.75rem, map-get($scale-factors, large));
    }
    
    @include respond-to(desktop) {
        height: calc-responsive-size(1.75rem, map-get($scale-factors, desktop));
    }
    
    @include respond-to(tablet) {
        height: calc-responsive-size(1.75rem, map-get($scale-factors, tablet));
    }
    
    @include respond-to(mobile) {
        height: calc-responsive-size(1.75rem, map-get($scale-factors, mobile));
    }
}

@mixin skill-item-img {
    height: 4rem;
    
    @include respond-to(large) {
        height: calc-responsive-size(4rem, map-get($scale-factors, large));
    }
    
    @include respond-to(desktop) {
        height: calc-responsive-size(4rem, map-get($scale-factors, desktop));
    }
    
    @include respond-to(tablet) {
        height: calc-responsive-size(4rem, map-get($scale-factors, tablet));
    }
    
    @include respond-to(mobile) {
        height: calc-responsive-size(4rem, map-get($scale-factors, mobile));
    }
}

/* DISPLAY */
@mixin display-flex($direction, $justyfy, $align, $gap){
    display: flex;
    flex-direction: $direction;
    justify-content: $justyfy;
    align-items: $align;
    gap: $gap;
}

/* PADDING */
@mixin section-padding($vertical: 6rem, $horizontal: 12rem) {
    padding: $vertical $horizontal;

    @include respond-to(desktop) {
        padding: calc($vertical * 0.84) calc($horizontal * 0.84);
    }
    
    @include respond-to(tablet) {
        padding: calc($vertical * 0.67) calc($horizontal * 0.3);
    }
    
    @include respond-to(mobile) {
        padding: calc($vertical * 0.5) calc($horizontal * 0.17);
    }
}